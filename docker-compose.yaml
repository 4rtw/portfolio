version: "3.9"
services:
  frontend-backoffice:
    build:
      context: ./Frontend/backoffice
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    labels:
      - "traefik.http.routers.backoffice.rule=Host(`backoffice.${DNS_NAME}`)"
      - "traefik.http.routers.backoffice.tls=true"
      - "traefik.http.routers.backoffice.tls.certresolver=myresolver"
    networks:
      - public

  frontend-frontoffice:
    build:
      context: ./Frontend/frontoffice
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    labels:
      - "traefik.http.routers.frontoffice.rule=Host(`www.${DNS_NAME}`)"
      - "traefik.http.routers.frontoffice.tls=true"
      - "traefik.http.routers.frontoffice.tls.certresolver=myresolver"
    networks:
      - public

  api-news:
    build:
      context: ./Backend/news
      dockerfile: Dockerfile
    ports:
      - "4002:4002"
    labels:
      - "traefik.http.routers.api-news.rule=Host(`news.${DNS_NAME}`)"
      - "traefik.http.routers.api-news.tls=true"
      - "traefik.http.routers.api-news.tls.certresolver=myresolver"
    networks:
      - public

  #api-software-dev:

  #api-cloud-computing:

  api-about-me:
    build:
      context: ./Backend/about-me
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    labels:
      - "traefik.http.routers.api-about-me.rule=Host(`about-me.${DNS_NAME}`)"
      - "traefik.http.routers.api-about-me.tls=true"
      - "traefik.http.routers.api-about-me.tls.certresolver=myresolver"
    networks:
      - public

  api-contact-me:
    build:
      context: ./Backend/contact-me
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    labels:
      - "traefik.http.routers.api-contact-me.rule=Host(`contact-me.${DNS_NAME}`)"
      - "traefik.http.routers.api-contact-me.tls=true"
      - "traefik.http.routers.api-contact-me.tls.certresolver=myresolver"
    networks:
      - public

  #api-jwt:

  traefik:
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--providers.docker"
      - "--api.insecure=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.myresolver.acme.email=${DNS_EMAIL}"
      - "--certificatesResolvers.myresolver.acme.storage=/data/acme.json"
      - "--certificatesresolvers.myresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
    labels:
      - "traefik.http.middlewares.httpsonly.redirectscheme.scheme=https"
      - "traefik.http.middlewares.httpsonly.redirectscheme.permanent=true"
      - "traefik.http.routers.httpsonly.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.httpsonly.middlewares=httpsonly"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${DNS_NAME}`)"
      - "traefik.http.routers.dashboard.service=dashboard@internal"
      - "traefik.http.routers.api.rule=Host(`api.${DNS_NAME}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/Others/acme.json:/data/acme.json
    networks:
      - public

  db-mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - $PWD/Databases/mongo:/data/db

  db-mysql:
    image: mysql:latest
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQ_USER_PASSWORD}
    volumes:
      - $PWD/Databases/mysql:/var/lib/mysql

networks:
  public: